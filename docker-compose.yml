version: '3.8'

services:

  api:
    image: henrikklev/swiftgift-api:latest
    container_name: swiftgift-api
    ports:
      - '8080:8080'
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: gaveliste
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d gaveliste'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  image_db:
    image: postgres:16
    container_name: images_postgres_db
    environment:
      POSTGRES_USER: ${IMG_DB_USER}
      POSTGRES_PASSWORD: ${IMG_DB_PASSWORD}
      POSTGRES_DB: swiftgift_images
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/images
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${IMG_DB_USER} -d swiftgift_images'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    entrypoint: sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done"

  nginx:
    image: nginx:latest
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    network_mode: host
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - certbot

volumes:
  db_data:
  db_images:
